@page "/"
@using Istebrek_CV_Webb_FE.Models
@inject SkillsService TechService
@inject NavigationManager Navigation

<PageTitle>Istebrek | Resume</PageTitle>
<div id="all-content">
    <p id="admin-icon" @onclick="NavigateToPage" style="cursor: pointer; color: blue;"><i class="fa-solid fa-user"></i><br />ADMIN</p>
    <div id="profile-div">
        <img src="/bootstrap/Pics/profile-pic.svg" alt="profile-pic" />
        <div id="my-name">Istebrek Akram</div>
        <div id="work">.NET CLOUD DEVELOPER</div>
    </div>

    <div id="sections-div">
        <div>
            <h3 class="toggle-header" @onclick="() => ToggleSection(nameof(isProfileExpanded))">
                Profile <span class="arrow">@((isProfileExpanded ? "▼" : "▶"))</span>
            </h3>

            @if (isProfileExpanded)
            {
                <div id="skills-table">
                    <p>
                        In the summer of 2024, I made the life-changing decision to pursue my dream of becoming a
                        programmer. Since then, every step of this journey has deepened my passion for coding. I am
                        now excited to gain hands-on experience through an internship from week 38 to 45, eager to
                        apply my newfound skills and contribute to real-world projects.
                    </p>
                </div>
            }
        </div>

        <div>
            <h3 class="toggle-header" @onclick="() => ToggleSection(nameof(isEducationExpanded))">
                Education <span class="arrow">@((isEducationExpanded ? "▼" : "▶"))</span>
            </h3>

            @if (isEducationExpanded)
            {
                <div id="skills-table">
                    <table class="skills-table">
                        <thead>
                            <tr>
                                <th>School</th>
                                <th>Program</th>
                                <th>Duration</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="@(2 % 2 == 0 ? "even-row" : "odd-row")">
                                <td>IT-Högskolan</td>
                                <td>.Net Cloud Developer</td>
                                <td>2024-2026</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            }
        </div>

        <div>
            <h3 class="toggle-header" @onclick="() => ToggleSection(nameof(isSkillsExpanded))">
                Skills <span class="arrow">@((isSkillsExpanded ? "▼" : "▶"))</span>
            </h3>

            @if (isSkillsExpanded)
            {
                <div id="skills-table">
                    <table class="skills-table">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Experience</th>
                                <th>Level</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var tech in technologies)
                            {
                                <tr class="@(technologies.IndexOf(tech) % 2 == 0 ? "even-row" : "odd-row")">
                                    <td>@tech.TechName</td>
                                    <td>@tech.TechExperienceTime months</td>
                                    <td>@tech.TechLevel%</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
        <div>
            <h3 class="toggle-header" @onclick="() => ToggleSection(nameof(isProjectsExpanded))">
                Projects <span class="arrow">@((isProjectsExpanded ? "▼" : "▶"))</span>
            </h3>

            @if (isProjectsExpanded)
            {                
                <div id="skills-table">
                    <table class="skills-table">
                        <thead>
                            <tr>
                                <th>Course</th>
                                <th>Project</th>
                                <th>Description</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var project in projects)
                            {
                                <tr class="@(projects.IndexOf(project) % 2 == 0 ? "even-row" : "odd-row")">
                                    <td>@project.CourseName</td>
                                    <td>@project.ProjectName</td>
                                    <td>@project.Description</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>                
            }
        </div>
    </div>
</div>

@code {
    private List<Technology> technologies;
    private bool isProfileExpanded = false;
    private bool isSkillsExpanded = false;
    private bool isEducationExpanded = false;
    private bool isProjectsExpanded = false;

    protected override async Task OnInitializedAsync()
    {
        technologies = await TechService.GetTechnologiesAsync();
    }

    private static List<Projects> projects = new List<Projects>()
    {
        new Projects { CourseName = "C#", ProjectName = "Loops", Description = "In this lab I learned to nest loops in order to print a string in the desired way." },
        new Projects { CourseName = "C#", ProjectName = "Console Shop", Description = "This lab taught me to equip the console to make a simulation of a shop." },
        new Projects { CourseName = "C#", ProjectName = "WPF Shop", Description = "I created a booking system for a gym using WPF." },
        new Projects { CourseName = "Databases", ProjectName = "SQL Bookstore", Description = "Using SQL, I created tables with relations with the help of primary and foreign keys." },
        new Projects { CourseName = "Databases", ProjectName = "WPF Bookstore", Description = "I connected a SQL database to my WPF bookstore to display data from the database." },
        new Projects { CourseName = "Databases", ProjectName = "MongoDB Atlas Restaurant", Description = "I connected an Atlas database to a WPF project displaying the menu of a restaurant." },
        new Projects { CourseName = "Web Development", ProjectName = "HTML Website", Description = "I created a boba website consisting of a homepage, about, and a page for products and a checkout system using HTML, CSS and JavaScript." },
        new Projects { CourseName = "Web Development", ProjectName = "Atlas + API", Description = "Using an API to fetch data from an Atlas database and displaying it on a HTML website with a theme of rejection therapy." }
    };

    private void ToggleSection(string section)
    {
        if (section == nameof(isProfileExpanded))
        {
            isProfileExpanded = !isProfileExpanded;
        }
        else if (section == nameof(isSkillsExpanded))
        {
            isSkillsExpanded = !isSkillsExpanded;
        }
        else if (section == nameof(isEducationExpanded))
        {
            isEducationExpanded = !isEducationExpanded;
        }
        else if (section == nameof(isProjectsExpanded))
        {
            isProjectsExpanded = !isProjectsExpanded;
        }
        InvokeAsync(StateHasChanged);
    }

    private void NavigateToPage()
    {
        Navigation.NavigateTo("/Account/Login");
    }
}
